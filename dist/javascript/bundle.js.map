{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascript/game.js","webpack:///./javascript/rock.js","webpack:///./javascript/scissors.js","webpack:///./javascript/paper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Rock","Scissors","Paper","window","addEventListener","e","keyCode","game","startGame","clickMute","code","scissors","moveScissors","document","getElementById","ctx","getContext","[object Object]","this","rocks","papers","frameCount","score","playMusic","Audio","rockSound","paperSound","startGameSound","toggleSound","pause","play","loop","font","fillStyle","fillText","cancelAnimationFrame","frame","prevRock","newRock","Math","abs","x","push","prevPaper","newPaper","scissor","rock","width","y","height","obj1","obj2","sounds","floor","random","createPaperRow","createRockRow","requestAnimationFrame","forEach","updateRock","paper","updatePaper","clearRect","background","Image","src","drawImage","drawScissors","updateScissors","drawRock","drawPaper","collisionRock","gameOver","collision","removePaper","image","speed","xSpeed","scissorsImg","xChange","yChange"],"mappings":"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","file":"./javascript/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Rock = require('./rock');\nconst Scissors = require('./scissors');\nconst Paper = require('./paper');\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.rocks = [];\n    this.papers = [];\n    this.frameCount = 0;\n    this.scissors = new Scissors(ctx);\n    this.score = 0;\n    this.playMusic = new Audio(\"./sounds/bgMusic2.mp3\");\n    this.rockSound = new Audio(\"./sounds/gameOver.mp3\");\n    this.paperSound = new Audio(\"./sounds/paper.mp3\");\n    this.startGameSound = new Audio(\"./sounds/startGame.mp3\");\n    this.toggleSound = false;\n  }\n\n  //starts or restarts a game\n  startGame () {\n    this.playMusic.pause();\n    this.toggleSound = false;\n    if (this.toggleSound === true) {\n      this.startGameSound.play();\n    }\n    this.rocks = [];\n    this.papers = [];\n    this.frameCount = 0;\n    this.scissors = new Scissors(ctx);\n    // this.draw();\n    this.score = 0;\n    this.loop();\n  }\n\n  clickMute () {\n    if (this.toggleSound === false) {\n      this.toggleSound = true;\n    } else {\n      this.toggleSound = false;\n    }\n  }\n\n  sounds () {\n    if (this.toggleSound === true) {\n      this.playMusic.play();\n    } else {\n      this.playMusic.pause();\n    }\n  }\n\n  gameOver () {\n    this.ctx.font=\"50px Comic Sans MS\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillText(\"GAME OVER\", 175, 280);\n    cancelAnimationFrame(this.frame);\n    this.playMusic.pause();\n  }\n\n  createRockRow (){\n    let prevRock = 0;\n\n    for (let i = 0; i < 2; i += 1) {\n      let newRock = new Rock(ctx);\n      //checks if previous rock and current rock are touching\n      if (Math.abs(prevRock - newRock.x) > 55) {\n        this.rocks.push(newRock);\n        prevRock = newRock.x;\n      }\n    }\n  }\n\n  createPaperRow (){\n    let prevPaper = 0;\n\n    for (let i = 0; i < 2; i += 1) {\n      //create a new paper first\n      let newPaper = new Paper(ctx);\n      // check if previous paper is going to overlap with  new paper\n      if (Math.abs(prevPaper - newPaper.x) > 65) {\n        //check if new Paper will overlap, then push if not\n        this.papers.push(newPaper);\n        //newly created paper is now the previous paper\n        prevPaper = newPaper.x;\n      }\n    }\n  }\n\n  collisionRock (scissor, rock) {\n    if (scissor.x + 10 < rock.x + rock.width - 10 &&\n      scissor.x + 10 + scissor.width - 8 > rock.x &&\n      scissor.y < rock.y + rock.height - 10 &&\n      scissor.y + scissor.height - 10 > rock.y) {\n      return true;\n    }\n  }\n\n  collision (obj1, obj2) {\n    if (obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y) {\n      return true;\n    }\n  }\n\n  loop () {\n    this.sounds();\n    this.frameCount += (1 + Math.floor(this.score/25));\n    if (this.frameCount > 50) {\n      Math.random() > 0.5 ? (this.createPaperRow()) : this.createRockRow();\n      this.frameCount = 0;\n    }\n    this.frame = requestAnimationFrame(this.loop.bind(this));\n    //update: calls update method from rock and paper\n    this.rocks.forEach(rock => {\n      //add this.score as argument to use for speed increment\n      rock.updateRock(this.score);\n    });\n    this.papers.forEach(paper => {\n      paper.updatePaper(this.score);\n    });\n    this.ctx.clearRect(0,0,550, 650);\n\n    //draw background\n    const background = new Image ();\n    background.src = \"https://s22.postimg.cc/791yje2a9/new_BG.png\";\n    this.ctx.drawImage(background, 0, 0);\n\n    // draw scissor\n    // let scissors = new Scissors(ctx);\n    this.scissors.drawScissors();\n\n    //check if scissor within screen. Update if within.\n    // if ((this.scissors.x >= 0) && (this.scissors.x <= 499)) {\n    this.scissors.updateScissors();\n    // }\n\n    //draw rocks\n    this.rocks.forEach(rock => {\n      rock.drawRock();\n    });\n\n    //draw paper\n    this.papers.forEach(paper => {\n      paper.drawPaper();\n    });\n\n    //display score\n    this.ctx.font=\"28px Comic Sans MS\";\n    this.ctx.fillStyle = \"blue\";\n    this.ctx.fillText(\"Score: \" + this.score, 400, 50);\n\n    //display level\n    this.ctx.font=\"28px Comic Sans MS\";\n    this.ctx.fillStyle = \"blue\";\n    this.ctx.fillText(\"Level: \" + Math.floor(this.score / 25), 410, 80);\n\n    //check for collision with a rock\n    this.rocks.forEach(rock => {\n      if (this.collisionRock(this.scissors, rock) && (this.toggleSound === true)) {\n        this.rockSound.play();\n        this.gameOver();\n      } else if (this.collisionRock(this.scissors, rock)) {\n        this.gameOver();\n      }\n    });\n\n    //check for collision with a paper\n    this.papers.forEach(paper => {\n      if (this.collision(this.scissors, paper) && (this.toggleSound === true)) {\n        this.paperSound.play();\n        paper.removePaper();\n        this.score += 1;\n        if ((this.score % 25) === 0 && (this.toggleSound === true)) {\n          this.startGameSound.play();\n        }\n      } else if (this.collision(this.scissors, paper)) {\n        paper.removePaper();\n        this.score += 1;\n      }\n    });\n  }\n}\n\n//starts game with spacebar\nwindow.addEventListener('keydown', startGame);\n\nfunction startGame(e) {\n  let code = e.keyCode;\n  if (code === 32) {\n    game.startGame();\n  }\n}\n\nwindow.addEventListener('keydown', muteButton);\n\nfunction muteButton(e) {\n  let code = e.keyCode;\n  if (code === 16) {\n    game.clickMute();\n  }\n}\n\n//sets key presses to activate moveScissors\nwindow.addEventListener('keydown', moveScissors);\n\nfunction moveScissors(e) {\n  let code = e.keyCode;\n  //if left key pressed\n  if (code === 37){\n    game.scissors.moveScissors(-4, 0);\n    //if right key pressed\n  } else if (code === 39) {\n    game.scissors.moveScissors(4, 0);\n  }\n}\n\n//Load music and canvas\nconst music = document.getElementById(\"bgMusic\");\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\n//creates a new instance of a Game\nconst game = new Game(ctx);\n\n//starts game on click\ndocument.getElementById(\"startGamebtn\").addEventListener(\"click\", () => game.startGame());\n\n//toggles mute button on/off on click\ndocument.getElementById(\"mute-btn\").addEventListener(\"click\", () => game.clickMute());\n\n\n\n\n\n\n// Link to updated background image: https://s22.postimg.cc/791yje2a9/new_BG.png\n// Sound effects downloaded from NoiseForFun.com\n","class Rock {\n  constructor(ctx) {\n    //create rock here\n    this.ctx = ctx;\n    this.x = (Math.random() * 490);\n    this.y = -56;\n    this.image = new Image ();\n    this.image.src = \"https://s15.postimg.cc/3wvz6x8bv/rock.png\";\n    this.speed = 2;\n    this.width = 52;\n    this.height = 48;\n  }\n\n  drawRock() {\n    // draws one rock\n    this.ctx.drawImage(this.image, this.x, this.y);\n  }\n\n  //adds the speed to the vertical direction of rock to make it move down\n  // add this.score as argument to incease speed when score goes up\n  updateRock(score) {\n    this.y += (this.speed + Math.floor(score/25));\n  }\n}\n\nmodule.exports = Rock;\n\n// link to rock image: https://s15.postimg.cc/3wvz6x8bv/rock.png\n","class Scissors {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.x = 250;\n    this.y = 500;\n    this.xSpeed = 0;\n    this.width = 35;\n    this.height = 45;\n    // this.ySpeed = 0;\n    // this.pos = { x: 250, y: 350 };\n  }\n\n  drawScissors() {\n    const scissorsImg = new Image();\n    scissorsImg.src = \"https://s15.postimg.cc/40psnd10b/scissors.png\";\n    this.ctx.drawImage(scissorsImg, this.x, this.y);\n  }\n\n  moveScissors(xChange, yChange) {\n    if (((this.x > 0) && (xChange < 0)) || ((this.x < 499) && (xChange > 0))) {\n      this.xSpeed = xChange;\n      // this.x += xChange;\n    }\n    // this.y += yChange;\n  }\n\n  updateScissors() {\n      // if scissor is at the left edge of the screen\n    if (this.x < 0) {\n      this.x = 0;\n      // if scissor is at the right edge of screen\n    } else if (this.x > 499) {\n      this.x = 498;\n    } else {\n      this.x = this.x + this.xSpeed;\n    }\n    // this.y = this.y + this.ySpeed;\n  }\n}\n\nmodule.exports = Scissors;\n\n\n//Link to scissors image: https://s15.postimg.cc/40psnd10b/scissors.png\n","class Paper {\n  constructor(ctx) {\n    this.ctx = ctx;\n    // this.pos = { x: , y: -56 };\n    this.x = (Math.random() * 490);\n    this.y = -56;\n    this.image = new Image ();\n    this.image.src = \"https://s22.postimg.cc/cvst0f79t/paper.png\";\n    this.speed = 2;\n    this.height = 54;\n    this.width = 54;\n  }\n\n  drawPaper() {\n    this.ctx.drawImage(this.image, this.x, this.y);\n  }\n\n  updatePaper(score) {\n    this.y += (this.speed + Math.floor(score/25));\n  }\n\n  removePaper() {\n    this.x = 700;\n    this.y = 700;\n  }\n}\n\n//   drawPaper() {\n//     const paperImg = new Image();\n//     paperImg.src = \"https://s22.postimg.cc/cvst0f79t/paper.png\";\n//\n//     let prevPaper = 0;\n//\n//     for (let i = 0; i < 2; i += 1) {\n//       let pos = Math.random() * 300;\n//\n//       if (Math.abs(prevPaper - pos) > 100) {\n//         this.ctx.drawImage(paperImg, pos, 0);\n//         prevPaper = pos;\n//       }\n//     }\n//   }\n// }\n\nmodule.exports = Paper;\n\n\n// link to paper image: https://s22.postimg.cc/cvst0f79t/paper.png\n"],"sourceRoot":""}