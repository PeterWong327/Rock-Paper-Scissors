{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascript/game.js","webpack:///./javascript/paper.js","webpack:///./javascript/rock.js","webpack:///./javascript/scissors.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;AAOA;AACA;;;;;;;;;;;;AClMA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;AAGA","file":"./javascript/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./javascript/game.js\");\n","const Rock = require('./rock');\nconst Scissors = require('./scissors');\nconst Paper = require('./paper');\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.rocks = [];\n    this.papers = [];\n    this.frameCount = 0;\n    this.scissors = new Scissors(ctx);\n    this.draw();\n    this.score = 0;\n    this.playMusic = new Audio(\"./sounds/bgMusic2.mp3\");\n    this.rockSound = new Audio(\"./sounds/rockHit.mp3\");\n    this.paperSound = new Audio(\"./sounds/startGame.mp3\");\n    this.startGameSound = new Audio(\"./sounds/startGame.mp3\");\n  }\n\n  draw () {\n    // clearFrame\n    // draw everything\n    // const background = new Image ();\n    // background.src = \"https://s22.postimg.cc/791yje2a9/new_BG.png\";\n    // this.ctx.drawImage(background, 0, 0);\n  }\n\n  //starts or restarts a game\n  startGame () {\n    this.startGameSound.play();\n    this.rocks = [];\n    this.papers = [];\n    this.frameCount = 0;\n    this.scissors = new Scissors(ctx);\n    this.draw();\n    this.score = 0;\n    this.loop();\n  }\n\n  gameOver () {\n    this.ctx.font=\"40px Comic Sans MS\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillText(\"GAME OVER\", 175, 280);\n    cancelAnimationFrame(this.frame);\n    this.playMusic.pause();\n  }\n\n  createRockRow (){\n    let prevRock = 0;\n\n    for (let i = 0; i < 2; i += 1) {\n      let newRock = new Rock(ctx);\n      //checks if previous rock and current rock are touching\n      if (Math.abs(prevRock - newRock.x) > 55) {\n        this.rocks.push(newRock);\n        prevRock = newRock.x;\n      }\n    }\n  }\n\n  createPaperRow (){\n    let prevPaper = 0;\n\n    for (let i = 0; i < 2; i += 1) {\n      //create a new paper first\n      let newPaper = new Paper(ctx);\n      // check if previous paper is going to overlap with  new paper\n      if (Math.abs(prevPaper - newPaper.x) > 65) {\n        //check if new Paper will overlap, then push if not\n        this.papers.push(newPaper);\n        //newly created paper is now the previous paper\n        prevPaper = newPaper.x;\n      }\n    }\n  }\n\n  collisionRock (scissor, rock) {\n    if (scissor.x + 10 < rock.x + rock.width - 8 &&\n      scissor.x + 10 + scissor.width - 8 > rock.x &&\n      scissor.y < rock.y + rock.height - 10 &&\n      scissor.y + scissor.height - 10 > rock.y) {\n      return true;\n    }\n  }\n\n  collision (obj1, obj2) {\n    if (obj1.x < obj2.x + obj2.width &&\n      obj1.x + obj1.width > obj2.x &&\n      obj1.y < obj2.y + obj2.height &&\n      obj1.y + obj1.height > obj2.y) {\n      return true;\n    }\n  }\n\n  loop () {\n    this.playMusic.play();\n    this.frameCount += 1;\n    if (this.frameCount > 50) {\n      Math.random() > 0.5 ? (this.createPaperRow()) : this.createRockRow();\n      this.frameCount = 0;\n    }\n\n    this.frame = requestAnimationFrame(this.loop.bind(this));\n    //update: calls update method from rock and paper\n    this.rocks.forEach(rock => {\n      //add this.score as argument to use for speed increment\n      rock.updateRock();\n    });\n\n    this.papers.forEach(paper => {\n      paper.updatePaper();\n    });\n\n    this.ctx.clearRect(0,0,550, 650);\n\n\n    //draw background\n    const background = new Image ();\n    background.src = \"https://s22.postimg.cc/791yje2a9/new_BG.png\";\n    this.ctx.drawImage(background, 0, 0);\n\n    // draw scissor\n    // let scissors = new Scissors(ctx);\n    this.scissors.drawScissors();\n\n    //check if scissor within screen. Update if within.\n    // if ((this.scissors.x >= 0) && (this.scissors.x <= 499)) {\n      this.scissors.updateScissors();\n    // }\n\n    //draw rocks\n    this.rocks.forEach(rock => {\n      rock.drawRock();\n    });\n\n    //draw paper\n    this.papers.forEach(paper => {\n      paper.drawPaper();\n    });\n\n    //display score\n    this.ctx.font=\"28px Comic Sans MS\";\n    this.ctx.fillStyle = \"blue\";\n    this.ctx.fillText(\"Score: \" + this.score, 400, 50);\n\n    //check for collision with a rock\n    this.rocks.forEach(rock => {\n      if (this.collisionRock(this.scissors, rock)) {\n        // console.log(\"collision with rock!\");\n        // setTimeout(this.gameOver(), 1000);\n        this.rockSound.play();\n        this.gameOver();\n      }\n    });\n\n    //check for collision with a paper\n    this.papers.forEach(paper => {\n      if (this.collision(this.scissors, paper)) {\n        this.paperSound.play();\n        paper.removePaper();\n        this.score += 1;\n        // console.log(\"Score:\" + this.score);\n      }\n    });\n  }\n}\n\nwindow.addEventListener('keydown', moveScissors);\n\nfunction moveScissors(e) {\n  let code = e.keyCode;\n  if (code === 37){\n    game.scissors.moveScissors(-4, 0);\n  } else if (code === 39) {\n    game.scissors.moveScissors(4, 0);\n  }\n}\n\nconst music = document.getElementById(\"bgMusic\");\n\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\n//creates a new instance of a Game\nconst game = new Game(ctx);\n\ndocument.getElementById(\"startGamebtn\").addEventListener(\"click\", () => game.startGame());\n\n\n\n\n\n\n// Link to background image: https://s22.postimg.cc/5h3h8fqnl/background.png\n// Link to updated background image: https://s22.postimg.cc/791yje2a9/new_BG.png\n","class Paper {\n  constructor(ctx) {\n    this.ctx = ctx;\n    // this.pos = { x: , y: -56 };\n    this.x = (Math.random() * 490);\n    this.y = -56;\n    this.image = new Image ();\n    this.image.src = \"https://s22.postimg.cc/cvst0f79t/paper.png\";\n    this.speed = 2;\n    this.height = 54;\n    this.width = 54;\n  }\n\n  drawPaper() {\n    this.ctx.drawImage(this.image, this.x, this.y);\n  }\n\n  updatePaper() {\n    this.y += (this.speed);\n  }\n\n  removePaper() {\n    this.x = 700;\n    this.y = 700;\n  }\n}\n\n//   drawPaper() {\n//     const paperImg = new Image();\n//     paperImg.src = \"https://s22.postimg.cc/cvst0f79t/paper.png\";\n//\n//     let prevPaper = 0;\n//\n//     for (let i = 0; i < 2; i += 1) {\n//       let pos = Math.random() * 300;\n//\n//       if (Math.abs(prevPaper - pos) > 100) {\n//         this.ctx.drawImage(paperImg, pos, 0);\n//         prevPaper = pos;\n//       }\n//     }\n//   }\n// }\n\nmodule.exports = Paper;\n\n\n// link to paper image: https://s22.postimg.cc/cvst0f79t/paper.png\n","class Rock {\n  constructor(ctx) {\n    //create rock here\n    this.ctx = ctx;\n    this.x = (Math.random() * 490);\n    this.y = -56;\n    // this.pos = {x: (Math.random() * 450 + 48), y: -56 };\n    this.image = new Image ();\n    this.image.src = \"https://s15.postimg.cc/3wvz6x8bv/rock.png\";\n    this.speed = 2;\n    this.width = 52;\n    this.height = 48;\n  }\n\n  drawRock() {\n    // draws one rock\n    this.ctx.drawImage(this.image, this.x, this.y);\n  }\n\n  //adds the speed to the vertical direction of rock to make it move down\n  // add this.score as argument to incease speed when score goes up\n  updateRock() {\n    this.y += (this.speed);\n  }\n}\n\nmodule.exports = Rock;\n\n// link to rock image: https://s15.postimg.cc/3wvz6x8bv/rock.png\n","class Scissors {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.x = 250;\n    this.y = 500;\n    this.xSpeed = 0;\n    this.width = 35;\n    this.height = 45;\n    // this.ySpeed = 0;\n    // this.pos = { x: 250, y: 350 };\n  }\n\n  drawScissors() {\n    const scissorsImg = new Image();\n    scissorsImg.src = \"https://s15.postimg.cc/40psnd10b/scissors.png\";\n    this.ctx.drawImage(scissorsImg, this.x, this.y);\n  }\n\n  moveScissors(xChange, yChange) {\n    if (((this.x > 0) && (xChange < 0)) || ((this.x < 499) && (xChange > 0))) {\n      this.xSpeed = xChange;\n      // this.x += xChange;\n    }\n    // this.y += yChange;\n  }\n\n  updateScissors() {\n      // if scissor is at the left edge of the screen\n    if (this.x < 0) {\n      this.x = 0;\n      // if scissor is at the right edge of screen\n    } else if (this.x > 499) {\n      this.x = 498;\n    } else {\n      this.x = this.x + this.xSpeed;\n    }\n    // this.y = this.y + this.ySpeed;\n  }\n}\n\nmodule.exports = Scissors;\n\n\n//Link to scissors image: https://s15.postimg.cc/40psnd10b/scissors.png\n"],"sourceRoot":""}